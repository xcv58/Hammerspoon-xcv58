[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.logger",
        "notes" : [

        ],
        "signature" : "Microphone.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
      },
      {
        "doc" : "Default hotkey mods.",
        "stripped_doc" : [
          "Default hotkey mods."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.hyper",
        "notes" : [

        ],
        "signature" : "Microphone.hyper",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "hyper",
        "desc" : "Default hotkey mods."
      },
      {
        "doc" : "Default key to toggle mute state.",
        "stripped_doc" : [
          "Default key to toggle mute state."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.toggleKey",
        "notes" : [

        ],
        "signature" : "Microphone.toggleKey",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "toggleKey",
        "desc" : "Default key to toggle mute state."
      },
      {
        "doc" : "Default key to toggle speak mode.",
        "stripped_doc" : [
          "Default key to toggle speak mode."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.toggleSpeakModal",
        "notes" : [

        ],
        "signature" : "Microphone.toggleSpeakModal",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "toggleSpeakModal",
        "desc" : "Default key to toggle speak mode."
      },
      {
        "doc" : "Default hotmap mapping to define available functions with related hotkey and init function.",
        "stripped_doc" : [
          "Default hotmap mapping to define available functions with related hotkey and init function."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.defaultMapping",
        "notes" : [

        ],
        "signature" : "Microphone.defaultMapping",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "defaultMapping",
        "desc" : "Default hotmap mapping to define available functions with related hotkey and init function."
      }
    ],
    "stripped_doc" : [

    ],
    "type" : "Module",
    "desc" : "Control the default Microphone mute state, [instructions](https:\/\/github.com\/xcv58\/Hammerspoon-xcv58\/wiki\/Microphone-Spoon).",
    "Deprecated" : [

    ],
    "Constructor" : [

    ],
    "doc" : "Control the default Microphone mute state, [instructions](https:\/\/github.com\/xcv58\/Hammerspoon-xcv58\/wiki\/Microphone-Spoon).\n\nDownload: [https:\/\/github.com\/xcv58\/Hammerspoon-xcv58\/raw\/master\/hammerspoon\/Spoons\/Microphone.spoon.zip](https:\/\/github.com\/xcv58\/Hammerspoon-xcv58\/raw\/master\/hammerspoon\/Spoons\/Microphone.spoon.zip)",
    "Method" : [
      {
        "doc" : "init.\n\nParameters:\n * None\n\nReturns:\n * The Microphone object",
        "stripped_doc" : [
          "init.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "def" : "Microphone:init()",
        "notes" : [

        ],
        "signature" : "Microphone:init()",
        "type" : "Method",
        "returns" : [
          " * The Microphone object"
        ],
        "name" : "init",
        "desc" : "init."
      },
      {
        "doc" : "toggle mute state for default input device.\n\nParameters:\n * None\n\nReturns:\n * A boolean to indicate current mute state. Or nil if no input device.",
        "stripped_doc" : [
          "toggle mute state for default input device.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "def" : "Microphone:toggleInputMuted()",
        "notes" : [

        ],
        "signature" : "Microphone:toggleInputMuted()",
        "type" : "Method",
        "returns" : [
          " * A boolean to indicate current mute state. Or nil if no input device."
        ],
        "name" : "toggleInputMuted",
        "desc" : "toggle mute state for default input device."
      },
      {
        "doc" : "set mute state for default input device.\n\nParameters:\n * muted - A boolean, to indicate the mute state to set.\n\nReturns:\n * True if the device's mutedness state was set, or False if it does not support muting. Or nil if no input device.",
        "stripped_doc" : [
          "set mute state for default input device.",
          ""
        ],
        "parameters" : [
          " * muted - A boolean, to indicate the mute state to set.",
          ""
        ],
        "def" : "Microphone:setMuted(muted)",
        "notes" : [

        ],
        "signature" : "Microphone:setMuted(muted)",
        "type" : "Method",
        "returns" : [
          " * True if the device's mutedness state was set, or False if it does not support muting. Or nil if no input device."
        ],
        "name" : "setMuted",
        "desc" : "set mute state for default input device."
      },
      {
        "doc" : "Binds hotkeys for Microphone\n\nParameters:\n * mapping - A table containing hotkey modifier\/key details for the following items:\n  * toggleMute - Toggle the state of default input device\n  * toggleSpeakModal - Toggle the speak mode:\n                       1st hit -> unmute the default input device\n                       2nd hit -> mute the default input device\n\nReturns:\n * The Microphone object",
        "stripped_doc" : [
          "Binds hotkeys for Microphone",
          ""
        ],
        "parameters" : [
          " * mapping - A table containing hotkey modifier\/key details for the following items:",
          "  * toggleMute - Toggle the state of default input device",
          "  * toggleSpeakModal - Toggle the speak mode:",
          "                       1st hit -> unmute the default input device",
          "                       2nd hit -> mute the default input device",
          ""
        ],
        "def" : "Microphone:bindHotkeys(mapping)",
        "notes" : [

        ],
        "signature" : "Microphone:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [
          " * The Microphone object"
        ],
        "name" : "bindHotkeys",
        "desc" : "Binds hotkeys for Microphone"
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "doc" : "Default hotmap mapping to define available functions with related hotkey and init function.",
        "stripped_doc" : [
          "Default hotmap mapping to define available functions with related hotkey and init function."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.defaultMapping",
        "notes" : [

        ],
        "signature" : "Microphone.defaultMapping",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "defaultMapping",
        "desc" : "Default hotmap mapping to define available functions with related hotkey and init function."
      },
      {
        "doc" : "Default hotkey mods.",
        "stripped_doc" : [
          "Default hotkey mods."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.hyper",
        "notes" : [

        ],
        "signature" : "Microphone.hyper",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "hyper",
        "desc" : "Default hotkey mods."
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.logger",
        "notes" : [

        ],
        "signature" : "Microphone.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log level for the messages coming from the Spoon."
      },
      {
        "doc" : "Default key to toggle mute state.",
        "stripped_doc" : [
          "Default key to toggle mute state."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.toggleKey",
        "notes" : [

        ],
        "signature" : "Microphone.toggleKey",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "toggleKey",
        "desc" : "Default key to toggle mute state."
      },
      {
        "doc" : "Default key to toggle speak mode.",
        "stripped_doc" : [
          "Default key to toggle speak mode."
        ],
        "parameters" : [

        ],
        "def" : "Microphone.toggleSpeakModal",
        "notes" : [

        ],
        "signature" : "Microphone.toggleSpeakModal",
        "type" : "Variable",
        "returns" : [

        ],
        "name" : "toggleSpeakModal",
        "desc" : "Default key to toggle speak mode."
      },
      {
        "doc" : "Binds hotkeys for Microphone\n\nParameters:\n * mapping - A table containing hotkey modifier\/key details for the following items:\n  * toggleMute - Toggle the state of default input device\n  * toggleSpeakModal - Toggle the speak mode:\n                       1st hit -> unmute the default input device\n                       2nd hit -> mute the default input device\n\nReturns:\n * The Microphone object",
        "stripped_doc" : [
          "Binds hotkeys for Microphone",
          ""
        ],
        "parameters" : [
          " * mapping - A table containing hotkey modifier\/key details for the following items:",
          "  * toggleMute - Toggle the state of default input device",
          "  * toggleSpeakModal - Toggle the speak mode:",
          "                       1st hit -> unmute the default input device",
          "                       2nd hit -> mute the default input device",
          ""
        ],
        "def" : "Microphone:bindHotkeys(mapping)",
        "notes" : [

        ],
        "signature" : "Microphone:bindHotkeys(mapping)",
        "type" : "Method",
        "returns" : [
          " * The Microphone object"
        ],
        "name" : "bindHotkeys",
        "desc" : "Binds hotkeys for Microphone"
      },
      {
        "doc" : "init.\n\nParameters:\n * None\n\nReturns:\n * The Microphone object",
        "stripped_doc" : [
          "init.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "def" : "Microphone:init()",
        "notes" : [

        ],
        "signature" : "Microphone:init()",
        "type" : "Method",
        "returns" : [
          " * The Microphone object"
        ],
        "name" : "init",
        "desc" : "init."
      },
      {
        "doc" : "set mute state for default input device.\n\nParameters:\n * muted - A boolean, to indicate the mute state to set.\n\nReturns:\n * True if the device's mutedness state was set, or False if it does not support muting. Or nil if no input device.",
        "stripped_doc" : [
          "set mute state for default input device.",
          ""
        ],
        "parameters" : [
          " * muted - A boolean, to indicate the mute state to set.",
          ""
        ],
        "def" : "Microphone:setMuted(muted)",
        "notes" : [

        ],
        "signature" : "Microphone:setMuted(muted)",
        "type" : "Method",
        "returns" : [
          " * True if the device's mutedness state was set, or False if it does not support muting. Or nil if no input device."
        ],
        "name" : "setMuted",
        "desc" : "set mute state for default input device."
      },
      {
        "doc" : "toggle mute state for default input device.\n\nParameters:\n * None\n\nReturns:\n * A boolean to indicate current mute state. Or nil if no input device.",
        "stripped_doc" : [
          "toggle mute state for default input device.",
          ""
        ],
        "parameters" : [
          " * None",
          ""
        ],
        "def" : "Microphone:toggleInputMuted()",
        "notes" : [

        ],
        "signature" : "Microphone:toggleInputMuted()",
        "type" : "Method",
        "returns" : [
          " * A boolean to indicate current mute state. Or nil if no input device."
        ],
        "name" : "toggleInputMuted",
        "desc" : "toggle mute state for default input device."
      }
    ],
    "name" : "Microphone"
  }
]